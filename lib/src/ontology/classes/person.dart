// This is free and unencumbered software released into the public domain.

import '../../language.dart' show L;
import '../property.dart' show Property;
import 'thing.dart' show ThingClass;

abstract final class PersonClass {
  static final id = ThingClass.id;
  static final name = ThingClass.name;

  static final Property honorific = Property(
    domain: #Person,
    id: #honorific,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Honorific",
      L.eo: "Honortitolo",
      L.es: null,
      L.fi: "Nimike",
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null, // TODO
    range: {#Literal},
    subPropertyOf: {},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property alias = Property(
    domain: #Person,
    id: #alias,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Alias",
      L.eo: null,
      L.es: null,
      L.fi: "Alias",
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null, // TODO
    range: {#Literal},
    subPropertyOf: {#name},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property photo = Property(
    domain: #Person,
    id: #photo,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Photo",
      L.eo: null,
      L.es: null,
      L.fi: "Valokuva",
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null, // TODO
    range: {#Literal},
    subPropertyOf: {#image},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property sex = Property(
    domain: #Person,
    id: #sex,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Sex",
      L.eo: null,
      L.es: null,
      L.fi: "Sukupuoli",
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {},
    subPropertyOf: {},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property birth = Property(
    domain: #Person,
    id: #birth,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Birth",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Event},
    subPropertyOf: {},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property death = Property(
    domain: #Person,
    id: #death,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Death",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Event},
    subPropertyOf: {},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property parent = Property(
    domain: #Person,
    id: #parent,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Parent",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Person},
    subPropertyOf: {#knows},
    inverseOf: {#child},
    sameAs: {},
    seeAlso: {},
  );

  static final Property father = Property(
    domain: #Person,
    id: #father,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Father",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Person},
    subPropertyOf: {#parent},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property mother = Property(
    domain: #Person,
    id: #mother,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Mother",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Person},
    subPropertyOf: {#parent},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property sibling = Property(
    domain: #Person,
    id: #sibling,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Sibling",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Person},
    subPropertyOf: {#knows},
    inverseOf: {#sibling},
    sameAs: {},
    seeAlso: {},
  );

  static final Property partner = Property(
    domain: #Person,
    id: #partner,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Partner",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Person},
    subPropertyOf: {#knows},
    inverseOf: {#partner},
    sameAs: {},
    seeAlso: {},
  );

  static final Property spouse = Property(
    domain: #Person,
    id: #spouse,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Spouse",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Person},
    subPropertyOf: {#partner},
    inverseOf: {#spouse},
    sameAs: {},
    seeAlso: {},
  );

  static final Property child = Property(
    domain: #Person,
    id: #child,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Child",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Person},
    subPropertyOf: {#knows},
    inverseOf: {#parent},
    sameAs: {},
    seeAlso: {},
  );

  static final Property colleague = Property(
    domain: #Person,
    id: #colleague,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Colleague",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Person},
    subPropertyOf: {#knows},
    inverseOf: {#colleague},
    sameAs: {},
    seeAlso: {},
  );

  static final Property knows = Property(
    domain: #Person,
    id: #knows,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Knows",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {#Person},
    subPropertyOf: {#knows},
    inverseOf: {#colleague},
    sameAs: {},
    seeAlso: {},
  );

  static final Property speaks = Property(
    domain: #Person,
    id: #speaks,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Speaks",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null, // TODO
    range: {#Literal},
    subPropertyOf: {},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property nationality = Property(
    domain: #Person,
    id: #nationality,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Nationality",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null, // TODO
    range: {#Literal},
    subPropertyOf: {},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property email = Property(
    domain: #Person,
    id: #email,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Email",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null, // TODO
    range: {#Literal},
    subPropertyOf: {},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property phone = Property(
    domain: #Person,
    id: #phone,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Phone",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null, // TODO
    range: {#Literal},
    subPropertyOf: {},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property link = Property(
    domain: #Person,
    id: #link,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Link",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null, // TODO
    range: {#Literal},
    subPropertyOf: {},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static final Property note = Property(
    domain: #Person,
    id: #note,
    label: {
      L.ar: null,
      L.de: null,
      L.en: "Note",
      L.eo: null,
      L.es: null,
      L.fi: null,
      L.pt: null,
      L.sv: null,
      L.tr: null,
      L.uk: null,
    },
    comment: {},
    syntax: null,
    range: {},
    subPropertyOf: {},
    inverseOf: {},
    sameAs: {},
    seeAlso: {},
  );

  static Set<Property> properties() => Set.unmodifiable({
        honorific,
        alias,
        photo,
        sex,
        birth,
        death,
        parent,
        father,
        mother,
        sibling,
        partner,
        spouse,
        child,
        colleague,
        knows,
        speaks,
        nationality,
        email,
        phone,
        link,
        note,
      });
}
